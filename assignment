1. dart语言特性中的循环语句定义和操作方法
        main() {  var callbacks = []; 
                  for (var i = 0; i < 2; i++) {  
                         callbacks.add(() => print(i)); 
                         }
                   callbacks.forEach((c) => c());  
                }//while和do while循环与javascript中一样，break,continue中也一样。
                  //switch使用==来判断对象是否相等。
2. dart字符串的定义和操作方法
(1).直接定义  var s1 = 'Single quotes work well for string literals.';
            var s2 = "Double quotes work just as well.";
2.也可以利用${expression}插入到，前提是expression是个标识符
           var s = 'string interpolation';
           assert('Dart has $s, which is very handy.' ==  'Dart has string interpolation, ' + 'which is very handy.');
(3).可以通过邻近的字符串或"+"链接字符串  
           var s1 = 'String ' 'concatenation'  " works even over line breaks.";
           assert(s1 == 'String concatenation works even over '  'line breaks.');
           var s2 = 'The + operator '   + 'works, as well.';
           assert(s2 == 'The + operator works, as well.');
(4).另一个创造多行的字符串可以采用多次引用单个标记符
          var s1 = '''
          You can create
          multi-line strings like this one.
          ''';
(5).You can create a “raw” string by prefixing it with r:
          var s = r"In a raw string, even \n isn't special.";
(6).// These work in a const string.
          const aConstNum = 0;
          const aConstBool = true;
          const aConstString = 'a constant string';
(7).//These do NOT work in a const string.
          var aNum = 0;
          var aBool = true;
          var aString = 'a string';
          const aConstList = const [1, 2, 3];
3. dart函数定义和使用方法
  一个简单的能够运行的函数: bool isNoble(int atomicNumber) {
                                  return _nobleGases[atomicNumber] != null;
                                                   }//参数比较齐全，以及确定类型
                              isNoble(atomicNumber) {
                                    return _nobleGases[atomicNumber] != null;
                                     }//缺少类型bool
                               bool isNoble(int atomicNumber) => _nobleGases[atomicNumber] != null;//速成语句
            
4. dart中数组定义和使用方法
list also knowed arrays;定义方法和c语言或是javascript一样，性质也是类似的
         var list = [1, 2, 3];
         assert(list.length == 3);
         assert(list[1] == 2);
         var constantList = const [1, 2, 3];
5.dart中列表定义和使用方法
数组
在Dart中数组也叫列表list.
下面是一个例子：
var gifts = {                      
// Keys       Values
  "first"  : "partridge",
  "second" : "turtledoves",
  "fifth"  : "golden rings"};

gifts["third"] = "apple"; //添加一个

6.dart中 Map定义和使用方法

map表示一种映射，Map 的字面量语法要求 key 必须字符串，但如果是用构造函数创建的，则任何对象都可以是 key。
var map = {
  'one': 1,
  'two': 2
}; // 或者 new Map(); 
assert(map['one'] == 1);
map['four'] = 4;
assert(map.length == 3);


7. querySelector()函数的详细API解释:



8. 详细解释dart如何操作html的文档



9. dart web app 应用程序组织结构的解释部分

10. dart可用的各种工具的解释部分

11. 指引你到其他社区社区寻求dart相关问题帮助的解释部分
在dart语言的官网上的Community and Support，可以找到很多帮助。除此之外，CDSN,ITeye,脚本之家，开源中国社区也有很多关于dart的专业帮助。

12. 从web storm软件菜单找出webstrom 中dart开发的帮助文档
打开webstorm，直接按f1，然后搜索dart，可以找到很多dart的开发知识。
https://www.jetbrains.com/help/webstorm/2016.2/dart-support.html?search=dart
https://www.jetbrains.com/help/webstorm/2016.2/dart.html?search=dart
https://www.jetbrains.com/help/webstorm/2016.2/testing-dart.html?search=dart
